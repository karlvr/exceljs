{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/one-cell-anchor-xform.js"],"names":["utils","require","BaseXform","StaticXform","CellPositionXform","ExtXform","PicXform","OneCellAnchorXform","module","exports","map","tag","inherits","prepare","model","options","picture","tl","range","ext","render","xmlStream","editAs","openNode","closeNode","parseOpen","node","parser","name","reset","attributes","parseText","text","parseClose","undefined","reconcile","rId","rel","rels","match","Target","mediaId","mediaIndex","medium","media"],"mappings":"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","file":"one-cell-anchor-xform.js","sourcesContent":["/**\n * Copyright (c) 2016-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar utils = require('../../../utils/utils');\nvar BaseXform = require('../base-xform');\nvar StaticXform = require('../static-xform');\n\nvar CellPositionXform = require('./cell-position-xform');\nvar ExtXform = require('./ext-xform');\nvar PicXform = require('./pic-xform');\n\nvar OneCellAnchorXform = module.exports = function() {\n  this.map = {\n    'xdr:from': new CellPositionXform({tag: 'xdr:from'}),\n    'xdr:ext': new ExtXform({tag: 'xdr:ext'}),\n    'xdr:pic': new PicXform(),\n    'xdr:clientData': new StaticXform({tag: 'xdr:clientData'}),\n  };\n};\n\nutils.inherits(OneCellAnchorXform, BaseXform, {\n  get tag() { return 'xdr:oneCellAnchor'; },\n\n  prepare: function(model, options) {\n    this.map['xdr:pic'].prepare(model.picture, options);\n\n    model.tl = model.range.tl;\n    model.ext = model.range.ext;\n  },\n\n  render: function(xmlStream, model) {\n    if (model.range.editAs) {\n      xmlStream.openNode(this.tag, {editAs: model.range.editAs});\n    } else {\n      xmlStream.openNode(this.tag);\n    }\n\n    this.map['xdr:from'].render(xmlStream, model.tl);\n    this.map['xdr:ext'].render(xmlStream, model.ext);\n    this.map['xdr:pic'].render(xmlStream, model.picture);\n    this.map['xdr:clientData'].render(xmlStream, {});\n\n    xmlStream.closeNode();\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        this.model = {\n          editAs: node.attributes.editAs\n        };\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  },\n\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model = this.model || {};\n        this.model.tl = this.map['xdr:from'].model;\n        this.model.ext = this.map['xdr:ext'].model;\n        this.model.picture = this.map['xdr:pic'].model;\n        return false;\n      default:\n        // could be some unrecognised tags\n        return true;\n    }\n  },\n\n  reconcile: function(model, options) {\n    if (model.picture && model.picture.rId) {\n      var rel = options.rels[model.picture.rId];\n      var match = rel.Target.match(/.*\\/media\\/(.+[.][a-z]{3,4})/);\n      if (match) {\n        var name = match[1];\n        var mediaId = options.mediaIndex[name];\n        model.medium = options.media[mediaId];\n      }\n    }\n    model.range = {\n      tl: model.tl,\n      ext: model.ext,\n    };\n    if (model.editAs) {\n      model.range.editAs = model.editAs;\n      delete model.editAs;\n    }\n    delete model.tl;\n    delete model.ext;\n  }\n});\n"]}